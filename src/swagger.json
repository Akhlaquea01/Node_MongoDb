{
  "swagger": "2.0",
  "info": {
    "title": "My API",
    "version": "1.0.0",
    "description": "API Documentation"
  },
  "host": "localhost:5000",
  "basePath": "/api/v1/",
  "schemes": [
    "http"
  ],
  "securityDefinitions": {
    "BearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter your Bearer token in the format: Bearer <token>"
    }
  },
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "paths": {
    "/users/register": {
      "post": {
        "summary": "Register a new user",
        "tags": ["User"],
        "consumes": [
          "multipart/form-data"
        ],
        "security": [],
        "parameters": [
          {
            "in": "formData",
            "name": "fullName",
            "type": "string",
            "required": true,
            "description": "User's full name"
          },
          {
            "in": "formData",
            "name": "email",
            "type": "string",
            "required": true,
            "description": "User's email address"
          },
          {
            "in": "formData",
            "name": "username",
            "type": "string",
            "required": true,
            "description": "User's username"
          },
          {
            "in": "formData",
            "name": "password",
            "type": "string",
            "required": true,
            "description": "User's password"
          },
          {
            "in": "formData",
            "name": "avatar",
            "type": "file",
            "required": true,
            "description": "User's avatar image"
          },
          {
            "in": "formData",
            "name": "coverImage",
            "type": "file",
            "required": false,
            "description": "User's cover image"
          }
        ],
        "responses": {
          "201": {
            "description": "User registered successfully"
          },
          "400": {
            "description": "Invalid input or missing required fields"
          },
          "409": {
            "description": "User with email or username already exists"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "summary": "Login user",
        "tags": ["User"],
        "security": [],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "required": false,
                  "description": "User's email address"
                },
                "username": {
                  "type": "string",
                  "description": "User's username"
                },
                "password": {
                  "type": "string",
                  "description": "User's password"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User logged in successfully"
          },
          "400": {
            "description": "Username or email is required"
          },
          "401": {
            "description": "Invalid credentials"
          },
          "404": {
            "description": "User does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/logout": {
      "get": {
        "summary": "Logout user",
        "tags": ["User"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User logged out successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/refresh-token": {
      "post": {
        "summary": "Refresh access token",
        "tags": ["User"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "refreshToken": {
                  "type": "string",
                  "description": "Refresh token"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Access token refreshed successfully"
          },
          "401": {
            "description": "Invalid refresh token"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/change-password": {
      "post": {
        "summary": "Change current user's password",
        "tags": ["User"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "oldPassword": {
                  "type": "string",
                  "required": true,
                  "description": "Current password"
                },
                "newPassword": {
                  "type": "string",
                  "required": true,
                  "description": "New password"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Password changed successfully"
          },
          "400": {
            "description": "Invalid old password"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/current-user": {
      "get": {
        "summary": "Get current user details",
        "tags": ["User"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Current user details retrieved successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/community/create": {
      "post": {
        "summary": "Create a new community",
        "tags": [
          "Community"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "name and description",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Community Name"
                },
                "description": {
                  "type": "string",
                  "description": "Community Description"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Community created successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/community/addUser": {
      "post": {
        "summary": "Add a user to a community",
        "tags": [
          "Community"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Community ID and User ID",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "communityId": {
                  "type": "string",
                  "description": "ID of the community"
                },
                "userId": {
                  "type": "string",
                  "description": "ID of the user to add"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User added to the community successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/community/getAll": {
      "get": {
        "summary": "Get all communities for a user",
        "tags": [
          "Community"
        ],
        "responses": {
          "200": {
            "description": "List of communities retrieved successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/videos": {
      "get": {
        "summary": "Get all videos",
        "tags": ["Video"],
        "responses": {
          "200": {
            "description": "Videos retrieved successfully"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "summary": "Publish a new video",
        "tags": ["Video"],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "videoFile",
            "type": "file",
            "required": true,
            "description": "Video file"
          },
          {
            "in": "formData",
            "name": "thumbnail",
            "type": "file",
            "required": true,
            "description": "Video thumbnail"
          }
        ],
        "responses": {
          "200": {
            "description": "Video published successfully"
          },
          "400": {
            "description": "Missing required fields"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/videos/{videoId}": {
      "get": {
        "summary": "Get video by ID",
        "tags": ["Video"],
        "parameters": [
          {
            "in": "path",
            "name": "videoId",
            "type": "string",
            "required": true,
            "description": "ID of the video"
          }
        ],
        "responses": {
          "200": {
            "description": "Video retrieved successfully"
          },
          "400": {
            "description": "Video not found or not accessible"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "patch": {
        "summary": "Update video details",
        "tags": ["Video"],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "videoId",
            "type": "string",
            "required": true,
            "description": "ID of the video"
          },
          {
            "in": "formData",
            "name": "thumbnail",
            "type": "file",
            "required": true,
            "description": "New video thumbnail"
          }
        ],
        "responses": {
          "200": {
            "description": "Video updated successfully"
          },
          "400": {
            "description": "Video not found or not accessible"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Delete video",
        "tags": ["Video"],
        "parameters": [
          {
            "in": "path",
            "name": "videoId",
            "type": "string",
            "required": true,
            "description": "ID of the video"
          }
        ],
        "responses": {
          "200": {
            "description": "Video deleted successfully"
          },
          "400": {
            "description": "Video not found or not accessible"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/videos/download/{videoId}": {
      "get": {
        "summary": "Download video",
        "tags": ["Video"],
        "parameters": [
          {
            "in": "path",
            "name": "videoId",
            "type": "string",
            "required": true,
            "description": "ID of the video"
          }
        ],
        "responses": {
          "200": {
            "description": "Video download started"
          },
          "404": {
            "description": "Video not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/videos/toggle/publish/{videoId}": {
      "patch": {
        "summary": "Toggle video publish status",
        "tags": ["Video"],
        "parameters": [
          {
            "in": "path",
            "name": "videoId",
            "type": "string",
            "required": true,
            "description": "ID of the video"
          }
        ],
        "responses": {
          "200": {
            "description": "Video publish status toggled successfully"
          },
          "400": {
            "description": "Video not found or not accessible"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/tweets": {
      "post": {
        "summary": "Create a new tweet",
        "tags": ["Tweet"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "content": {
                  "type": "string",
                  "required": true,
                  "description": "Tweet content"
                },
                "formattedContent": {
                  "type": "string",
                  "required": false,
                  "description": "Formatted tweet content"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tweet created successfully"
          },
          "400": {
            "description": "Content is required"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/tweets/user/{userId}": {
      "get": {
        "summary": "Get all tweets of a user",
        "tags": ["Tweet"],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "type": "string",
            "required": true,
            "description": "ID of the user whose tweets to fetch"
          }
        ],
        "responses": {
          "200": {
            "description": "User tweets retrieved successfully"
          },
          "400": {
            "description": "User ID is required or user not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/tweets/{tweetId}": {
      "patch": {
        "summary": "Update a tweet",
        "tags": ["Tweet"],
        "parameters": [
          {
            "in": "path",
            "name": "tweetId",
            "type": "string",
            "required": true,
            "description": "ID of the tweet to update"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "content": {
                  "type": "string",
                  "required": true,
                  "description": "Updated tweet content"
                },
                "formattedContent": {
                  "type": "string",
                  "required": false,
                  "description": "Updated formatted tweet content"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tweet updated successfully"
          },
          "400": {
            "description": "Tweet not found or unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Delete a tweet",
        "tags": ["Tweet"],
        "parameters": [
          {
            "in": "path",
            "name": "tweetId",
            "type": "string",
            "required": true,
            "description": "ID of the tweet to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Tweet deleted successfully"
          },
          "400": {
            "description": "Tweet not found or unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/playlist": {
      "post": {
        "summary": "Create a new playlist",
        "tags": ["Playlist"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "required": true,
                  "description": "Playlist name"
                },
                "description": {
                  "type": "string",
                  "required": false,
                  "description": "Playlist description"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Playlist created successfully"
          },
          "400": {
            "description": "Name and description are required"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/playlist/{playlistId}": {
      "get": {
        "summary": "Get playlist by ID",
        "tags": ["Playlist"],
        "parameters": [
          {
            "in": "path",
            "name": "playlistId",
            "type": "string",
            "required": true,
            "description": "ID of the playlist"
          }
        ],
        "responses": {
          "200": {
            "description": "Playlist retrieved successfully"
          },
          "400": {
            "description": "Playlist ID is required or playlist not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "patch": {
        "summary": "Update playlist",
        "tags": ["Playlist"],
        "parameters": [
          {
            "in": "path",
            "name": "playlistId",
            "type": "string",
            "required": true,
            "description": "ID of the playlist"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "required": false,
                  "description": "New playlist name"
                },
                "description": {
                  "type": "string",
                  "required": false,
                  "description": "New playlist description"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Playlist updated successfully"
          },
          "400": {
            "description": "Playlist not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Delete playlist",
        "tags": ["Playlist"],
        "parameters": [
          {
            "in": "path",
            "name": "playlistId",
            "type": "string",
            "required": true,
            "description": "ID of the playlist"
          }
        ],
        "responses": {
          "200": {
            "description": "Playlist deleted successfully"
          },
          "400": {
            "description": "Playlist not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/playlist/add/{videoId}/{playlistId}": {
      "patch": {
        "summary": "Add video to playlist",
        "tags": ["Playlist"],
        "parameters": [
          {
            "in": "path",
            "name": "videoId",
            "type": "string",
            "required": true,
            "description": "ID of the video to add"
          },
          {
            "in": "path",
            "name": "playlistId",
            "type": "string",
            "required": true,
            "description": "ID of the playlist"
          }
        ],
        "responses": {
          "200": {
            "description": "Video added to playlist successfully"
          },
          "400": {
            "description": "Video or playlist not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/playlist/remove/{videoId}/{playlistId}": {
      "patch": {
        "summary": "Remove video from playlist",
        "tags": ["Playlist"],
        "parameters": [
          {
            "in": "path",
            "name": "videoId",
            "type": "string",
            "required": true,
            "description": "ID of the video to remove"
          },
          {
            "in": "path",
            "name": "playlistId",
            "type": "string",
            "required": true,
            "description": "ID of the playlist"
          }
        ],
        "responses": {
          "200": {
            "description": "Video removed from playlist successfully"
          },
          "400": {
            "description": "Video or playlist not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/playlist/user/{userId}": {
      "get": {
        "summary": "Get all playlists of a user",
        "tags": ["Playlist"],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "type": "string",
            "required": true,
            "description": "ID of the user whose playlists to fetch"
          }
        ],
        "responses": {
          "200": {
            "description": "User playlists retrieved successfully"
          },
          "400": {
            "description": "User ID is required or user not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/likes/toggle/v/{videoId}": {
      "post": {
        "summary": "Toggle like on a video",
        "tags": ["Like"],
        "parameters": [
          {
            "in": "path",
            "name": "videoId",
            "type": "string",
            "required": true,
            "description": "ID of the video to like/unlike"
          }
        ],
        "responses": {
          "200": {
            "description": "Video like toggled successfully"
          },
          "400": {
            "description": "Video not found or not published"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/likes/toggle/c/{commentId}": {
      "post": {
        "summary": "Toggle like on a comment",
        "tags": ["Like"],
        "parameters": [
          {
            "in": "path",
            "name": "commentId",
            "type": "string",
            "required": true,
            "description": "ID of the comment to like/unlike"
          }
        ],
        "responses": {
          "200": {
            "description": "Comment like toggled successfully"
          },
          "400": {
            "description": "Comment not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/likes/toggle/t/{tweetId}": {
      "post": {
        "summary": "Toggle like on a tweet",
        "tags": ["Like"],
        "parameters": [
          {
            "in": "path",
            "name": "tweetId",
            "type": "string",
            "required": true,
            "description": "ID of the tweet to like/unlike"
          }
        ],
        "responses": {
          "200": {
            "description": "Tweet like toggled successfully"
          },
          "400": {
            "description": "Tweet not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/likes/videos": {
      "get": {
        "summary": "Get all liked videos of the current user",
        "tags": ["Like"],
        "responses": {
          "200": {
            "description": "Liked videos retrieved successfully"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/healthcheck": {
      "get": {
        "summary": "Check API health status",
        "tags": ["Health"],
        "security": [],
        "responses": {
          "200": {
            "description": "API is healthy",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "Health status",
                  "example": "ok"
                },
                "message": {
                  "type": "string",
                  "description": "Health check message",
                  "example": "API is running"
                }
              }
            }
          },
          "500": {
            "description": "API is unhealthy"
          }
        }
      }
    },
    "/dashboard/stats": {
      "get": {
        "summary": "Get channel statistics",
        "tags": ["Dashboard"],
        "responses": {
          "200": {
            "description": "Channel statistics retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "videoDetails": {
                  "type": "object",
                  "properties": {
                    "totalvideos": {
                      "type": "integer",
                      "description": "Total number of videos"
                    },
                    "totalviews": {
                      "type": "integer",
                      "description": "Total views across all videos"
                    }
                  }
                },
                "videoLikes": {
                  "type": "integer",
                  "description": "Total likes on videos"
                },
                "commentLikes": {
                  "type": "integer",
                  "description": "Total likes on comments"
                },
                "tweetLikes": {
                  "type": "integer",
                  "description": "Total likes on tweets"
                }
              }
            }
          },
          "400": {
            "description": "User not found or no video details available"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/dashboard/videos": {
      "get": {
        "summary": "Get all videos of the channel",
        "tags": ["Dashboard"],
        "responses": {
          "200": {
            "description": "Channel videos retrieved successfully"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/community": {
      "post": {
        "summary": "Create a new community",
        "tags": ["Community"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "required": true,
                  "description": "Community name"
                },
                "description": {
                  "type": "string",
                  "required": true,
                  "description": "Community description"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Community created successfully"
          },
          "400": {
            "description": "Name and description are required"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/community/add-user": {
      "post": {
        "summary": "Add a user to a community",
        "tags": ["Community"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "string",
                  "required": true,
                  "description": "ID of the user to add"
                },
                "communityId": {
                  "type": "string",
                  "required": true,
                  "description": "ID of the community"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User added to community successfully"
          },
          "400": {
            "description": "Invalid user ID or community ID"
          },
          "404": {
            "description": "User or community not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/community/user": {
      "get": {
        "summary": "Get all communities of the current user",
        "tags": ["Community"],
        "responses": {
          "200": {
            "description": "User communities retrieved successfully"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/community/remove-user": {
      "post": {
        "summary": "Remove a user from a community",
        "tags": ["Community"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "string",
                  "required": true,
                  "description": "ID of the user to remove"
                },
                "communityId": {
                  "type": "string",
                  "required": true,
                  "description": "ID of the community"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User removed from community successfully"
          },
          "400": {
            "description": "Invalid user ID or community ID"
          },
          "404": {
            "description": "User or community not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/community/edit": {
      "patch": {
        "summary": "Edit community details",
        "tags": ["Community"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "communityId": {
                  "type": "string",
                  "required": true,
                  "description": "ID of the community to edit"
                },
                "name": {
                  "type": "string",
                  "required": false,
                  "description": "New community name"
                },
                "description": {
                  "type": "string",
                  "required": false,
                  "description": "New community description"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Community updated successfully"
          },
          "400": {
            "description": "Invalid community ID"
          },
          "404": {
            "description": "Community not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/comments/{videoId}": {
      "get": {
        "summary": "Get all comments for a video",
        "tags": ["Comment"],
        "parameters": [
          {
            "in": "path",
            "name": "videoId",
            "type": "string",
            "required": true,
            "description": "ID of the video"
          }
        ],
        "responses": {
          "200": {
            "description": "Comments retrieved successfully"
          },
          "400": {
            "description": "Video ID is required or video does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "summary": "Add a comment to a video",
        "tags": ["Comment"],
        "parameters": [
          {
            "in": "path",
            "name": "videoId",
            "type": "string",
            "required": true,
            "description": "ID of the video"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "commentData": {
                  "type": "string",
                  "required": true,
                  "description": "Comment content"
                },
                "formattedContent": {
                  "type": "string",
                  "required": false,
                  "description": "Formatted comment content"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Comment added successfully"
          },
          "400": {
            "description": "Video ID or comment data is required"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/comments/c/{commentId}": {
      "patch": {
        "summary": "Update a comment",
        "tags": ["Comment"],
        "parameters": [
          {
            "in": "path",
            "name": "commentId",
            "type": "string",
            "required": true,
            "description": "ID of the comment to update"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "newcomment": {
                  "type": "string",
                  "required": true,
                  "description": "New comment content"
                },
                "formattedContent": {
                  "type": "string",
                  "required": false,
                  "description": "New formatted comment content"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Comment updated successfully"
          },
          "400": {
            "description": "Comment not found or unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Delete a comment",
        "tags": ["Comment"],
        "parameters": [
          {
            "in": "path",
            "name": "commentId",
            "type": "string",
            "required": true,
            "description": "ID of the comment to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Comment deleted successfully"
          },
          "400": {
            "description": "Comment not found or unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/categories/getAll": {
      "get": {
        "summary": "Get all categories",
        "tags": ["Category"],
        "responses": {
          "200": {
            "description": "Categories retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "categories": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Category name"
                      },
                      "type": {
                        "type": "string",
                        "description": "Category type (predefined/custom)"
                      },
                      "icon": {
                        "type": "string",
                        "description": "Category icon"
                      },
                      "parentCategory": {
                        "type": "string",
                        "description": "Parent category ID"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/categories/create": {
      "post": {
        "summary": "Create a new category",
        "tags": ["Category"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "required": true,
                  "description": "Category name"
                },
                "type": {
                  "type": "string",
                  "required": true,
                  "description": "Category type (predefined/custom)"
                },
                "icon": {
                  "type": "string",
                  "required": false,
                  "description": "Category icon"
                },
                "parentCategory": {
                  "type": "string",
                  "required": false,
                  "description": "Parent category ID"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Category created successfully"
          },
          "400": {
            "description": "Category with this name already exists"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/categories/{categoryId}": {
      "put": {
        "summary": "Update a category",
        "tags": ["Category"],
        "parameters": [
          {
            "in": "path",
            "name": "categoryId",
            "type": "string",
            "required": true,
            "description": "ID of the category to update"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "required": false,
                  "description": "New category name"
                },
                "icon": {
                  "type": "string",
                  "required": false,
                  "description": "New category icon"
                },
                "parentCategory": {
                  "type": "string",
                  "required": false,
                  "description": "New parent category ID"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Category updated successfully"
          },
          "400": {
            "description": "Category not found or parent category does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Delete a category",
        "tags": ["Category"],
        "parameters": [
          {
            "in": "path",
            "name": "categoryId",
            "type": "string",
            "required": true,
            "description": "ID of the category to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Category deleted successfully"
          },
          "400": {
            "description": "Category not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/account/create": {
      "post": {
        "summary": "Create a new bank account",
        "tags": ["Bank"],
        "responses": {
          "200": {
            "description": "Budgets retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "budgets": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "description": "Budget ID"
                      },
                      "userId": {
                        "type": "string",
                        "description": "User ID"
                      },
                      "amount": {
                        "type": "number",
                        "description": "Budget amount"
                      },
                      "recurring": {
                        "type": "boolean",
                        "description": "Whether the budget is recurring"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Budget creation date"
                      },
                      "category": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string",
                            "description": "Category ID"
                          },
                          "name": {
                            "type": "string",
                            "description": "Category name"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "No budgets found"
          },
          "400": {
            "description": "Invalid user ID"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/budgets/create": {
      "post": {
        "summary": "Create a new budget",
        "tags": ["Budget"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "string",
                  "required": true,
                  "description": "User ID"
                },
                "name": {
                  "type": "string",
                  "required": true,
                  "description": "Budget name"
                },
                "amount": {
                  "type": "number",
                  "required": true,
                  "description": "Budget amount"
                },
                "type": {
                  "type": "string",
                  "required": false,
                  "description": "Budget type"
                },
                "startDate": {
                  "type": "string",
                  "format": "date",
                  "required": true,
                  "description": "Budget start date"
                },
                "endDate": {
                  "type": "string",
                  "format": "date",
                  "required": true,
                  "description": "Budget end date"
                },
                "categoryId": {
                  "type": "string",
                  "required": false,
                  "description": "Category ID"
                },
                "recurring": {
                  "type": "boolean",
                  "required": true,
                  "description": "Whether the budget is recurring"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Budget created successfully"
          },
          "400": {
            "description": "Missing required fields or invalid IDs"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/budgets/{budgetId}": {
      "put": {
        "summary": "Update a budget",
        "tags": ["Budget"],
        "parameters": [
          {
            "in": "path",
            "name": "budgetId",
            "type": "string",
            "required": true,
            "description": "ID of the budget to update"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "required": false,
                  "description": "New budget name"
                },
                "amount": {
                  "type": "number",
                  "required": false,
                  "description": "New budget amount"
                },
                "type": {
                  "type": "string",
                  "required": false,
                  "description": "New budget type"
                },
                "startDate": {
                  "type": "string",
                  "format": "date",
                  "required": false,
                  "description": "New start date"
                },
                "endDate": {
                  "type": "string",
                  "format": "date",
                  "required": false,
                  "description": "New end date"
                },
                "categoryId": {
                  "type": "string",
                  "required": false,
                  "description": "New category ID"
                },
                "recurring": {
                  "type": "boolean",
                  "required": false,
                  "description": "New recurring status"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Budget updated successfully"
          },
          "404": {
            "description": "Budget not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Delete a budget",
        "tags": ["Budget"],
        "parameters": [
          {
            "in": "path",
            "name": "budgetId",
            "type": "string",
            "required": true,
            "description": "ID of the budget to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Budget deleted successfully"
          },
          "404": {
            "description": "Budget not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/budgets/monthly": {
      "get": {
        "summary": "Get monthly budget summary",
        "tags": ["Budget"],
        "parameters": [
          {
            "in": "query",
            "name": "month",
            "type": "integer",
            "required": false,
            "description": "Month number (1-12)",
            "default": "Current month"
          },
          {
            "in": "query",
            "name": "year",
            "type": "integer",
            "required": false,
            "description": "Year",
            "default": "Current year"
          }
        ],
        "responses": {
          "200": {
            "description": "Monthly budget summary retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "month": {
                  "type": "integer",
                  "description": "Month number"
                },
                "year": {
                  "type": "integer",
                  "description": "Year"
                },
                "budgets": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "description": "Budget ID"
                      },
                      "budgetId": {
                        "type": "string",
                        "description": "Budget ID"
                      },
                      "categoryId": {
                        "type": "string",
                        "description": "Category ID"
                      },
                      "categoryName": {
                        "type": "string",
                        "description": "Category name"
                      },
                      "monthlyBudget": {
                        "type": "number",
                        "description": "Monthly budget amount"
                      },
                      "spent": {
                        "type": "number",
                        "description": "Amount spent"
                      },
                      "remaining": {
                        "type": "number",
                        "description": "Remaining budget"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No budgets found for the specified month/year"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/budgets/yearly": {
      "get": {
        "summary": "Get yearly budget summary",
        "tags": ["Budget"],
        "parameters": [
          {
            "in": "query",
            "name": "year",
            "type": "integer",
            "required": false,
            "description": "Year",
            "default": "Current year"
          }
        ],
        "responses": {
          "200": {
            "description": "Yearly budget summary retrieved successfully"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/account/create": {
      "post": {
        "summary": "Create a new bank account",
        "tags": ["Bank"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "accountType": {
                  "type": "string",
                  "required": true,
                  "description": "Type of account"
                },
                "accountName": {
                  "type": "string",
                  "required": true,
                  "description": "Name of the account"
                },
                "accountNumber": {
                  "type": "string",
                  "required": true,
                  "description": "Account number"
                },
                "currency": {
                  "type": "string",
                  "required": true,
                  "description": "Account currency"
                },
                "balance": {
                  "type": "number",
                  "required": true,
                  "description": "Initial balance"
                },
                "foreignDetails": {
                  "type": "object",
                  "required": false,
                  "description": "Details for foreign currency accounts"
                },
                "isDefault": {
                  "type": "boolean",
                  "required": false,
                  "description": "Whether this should be the default account"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Account created successfully"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/account/{accountId}": {
      "put": {
        "summary": "Update a bank account",
        "tags": ["Bank"],
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "type": "string",
            "required": true,
            "description": "ID of the account to update"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "accountName": {
                  "type": "string",
                  "required": false,
                  "description": "New account name"
                },
                "accountType": {
                  "type": "string",
                  "required": false,
                  "description": "New account type"
                },
                "balance": {
                  "type": "number",
                  "required": false,
                  "description": "New balance"
                },
                "isDefault": {
                  "type": "boolean",
                  "required": false,
                  "description": "Whether this should be the default account"
                },
                "status": {
                  "type": "string",
                  "required": false,
                  "description": "Account status"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Account updated successfully"
          },
          "404": {
            "description": "Account not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Delete a bank account",
        "tags": ["Bank"],
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "type": "string",
            "required": true,
            "description": "ID of the account to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Account deleted successfully"
          },
          "404": {
            "description": "Account not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/account/get": {
      "get": {
        "summary": "Get all bank accounts for the current user",
        "tags": ["Bank"],
        "responses": {
          "200": {
            "description": "Accounts retrieved successfully"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/account/transaction": {
      "post": {
        "summary": "Create a new transaction",
        "tags": ["Bank"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "accountId": {
                  "type": "string",
                  "required": true,
                  "description": "ID of the account"
                },
                "transactionType": {
                  "type": "string",
                  "required": true,
                  "description": "Type of transaction (income/expense)"
                },
                "amount": {
                  "type": "number",
                  "required": true,
                  "description": "Transaction amount"
                },
                "categoryId": {
                  "type": "string",
                  "required": true,
                  "description": "ID of the category"
                },
                "description": {
                  "type": "string",
                  "required": false,
                  "description": "Transaction description"
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "required": false,
                  "description": "Transaction tags"
                },
                "location": {
                  "type": "object",
                  "required": false,
                  "description": "Transaction location"
                },
                "sharedWith": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "required": false,
                  "description": "Users to share the transaction with"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Transaction created successfully"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "summary": "Get all transactions",
        "tags": ["Bank"],
        "responses": {
          "200": {
            "description": "Transactions retrieved successfully"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "summary": "Get all transactions",
        "tags": ["Bank"],
        "parameters": [
          {
            "in": "query",
            "name": "startDate",
            "type": "string",
            "format": "date",
            "required": false,
            "description": "Start date for filtering transactions"
          },
          {
            "in": "query",
            "name": "endDate",
            "type": "string",
            "format": "date",
            "required": false,
            "description": "End date for filtering transactions"
          },
          {
            "in": "query",
            "name": "transactionType",
            "type": "string",
            "required": false,
            "description": "Filter by transaction type (debit/credit)"
          },
          {
            "in": "query",
            "name": "categoryId",
            "type": "string",
            "required": false,
            "description": "Filter by category ID"
          },
          {
            "in": "query",
            "name": "accountId",
            "type": "string",
            "required": false,
            "description": "Filter by account ID"
          },
          {
            "in": "query",
            "name": "minAmount",
            "type": "number",
            "required": false,
            "description": "Minimum transaction amount"
          },
          {
            "in": "query",
            "name": "maxAmount",
            "type": "number",
            "required": false,
            "description": "Maximum transaction amount"
          },
          {
            "in": "query",
            "name": "tags",
            "type": "string",
            "required": false,
            "description": "Filter by tags (comma-separated)"
          }
        ],
        "responses": {
          "200": {
            "description": "Transactions retrieved successfully"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/account/transaction/multitxn": {
      "post": {
        "summary": "Create multiple transactions",
        "tags": ["Bank"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "transactions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "accountId": {
                        "type": "string",
                        "required": true,
                        "description": "ID of the account"
                      },
                      "transactionType": {
                        "type": "string",
                        "required": true,
                        "description": "Type of transaction (income/expense)"
                      },
                      "amount": {
                        "type": "number",
                        "required": true,
                        "description": "Transaction amount"
                      },
                      "categoryId": {
                        "type": "string",
                        "required": true,
                        "description": "ID of the category"
                      },
                      "description": {
                        "type": "string",
                        "required": false,
                        "description": "Transaction description"
                      },
                      "tags": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "required": false,
                        "description": "Transaction tags"
                      },
                      "location": {
                        "type": "object",
                        "required": false,
                        "description": "Transaction location"
                      },
                      "sharedWith": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "required": false,
                        "description": "Users to share the transaction with"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Transactions created successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/account/transaction/{transactionId}": {
      "put": {
        "summary": "Update a transaction",
        "tags": ["Bank"],
        "parameters": [
          {
            "in": "path",
            "name": "transactionId",
            "type": "string",
            "required": true,
            "description": "ID of the transaction to update"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "transactionType": {
                  "type": "string",
                  "required": false,
                  "description": "New transaction type"
                },
                "amount": {
                  "type": "number",
                  "required": false,
                  "description": "New amount"
                },
                "categoryId": {
                  "type": "string",
                  "required": false,
                  "description": "New category ID"
                },
                "description": {
                  "type": "string",
                  "required": false,
                  "description": "New description"
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "required": false,
                  "description": "New tags"
                },
                "location": {
                  "type": "object",
                  "required": false,
                  "description": "New location"
                },
                "sharedWith": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "required": false,
                  "description": "New shared users"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction updated successfully"
          },
          "404": {
            "description": "Transaction not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Delete a transaction",
        "tags": ["Bank"],
        "parameters": [
          {
            "in": "path",
            "name": "transactionId",
            "type": "string",
            "required": true,
            "description": "ID of the transaction to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction deleted successfully"
          },
          "404": {
            "description": "Transaction not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/account/transaction/summary": {
      "get": {
        "summary": "Get transaction summary",
        "tags": ["Bank"],
        "responses": {
          "200": {
            "description": "Transaction summary retrieved successfully"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/account/transaction/incomeExpenseSummary": {
      "get": {
        "summary": "Get income and expense summary based on filter type",
        "tags": ["Transaction"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "filterType",
            "type": "string",
            "required": true,
            "enum": ["daily", "monthly", "yearly"],
            "description": "Type of filter to apply"
          },
          {
            "in": "query",
            "name": "date",
            "type": "string",
            "required": false,
            "description": "Date in DD/MM/YYYY format (required for daily filter)"
          },
          {
            "in": "query",
            "name": "month",
            "type": "integer",
            "required": false,
            "description": "Month number (1-12) (required for monthly filter)"
          },
          {
            "in": "query",
            "name": "year",
            "type": "integer",
            "required": false,
            "description": "Year (required for monthly and yearly filters)"
          }
        ],
        "responses": {
          "200": {
            "description": "Summary fetched successfully",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "example": 200
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "date": {
                        "type": "string",
                        "description": "Date in format YYYY-MM-DD (daily), YYYY-MM (monthly), or YYYY (yearly)"
                      },
                      "income": {
                        "type": "number",
                        "description": "Total income for the period"
                      },
                      "expense": {
                        "type": "number",
                        "description": "Total expense for the period"
                      },
                      "transactions": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Transaction ID"
                            },
                            "type": {
                              "type": "string",
                              "enum": ["credit", "debit"],
                              "description": "Transaction type"
                            },
                            "amount": {
                              "type": "number",
                              "description": "Transaction amount"
                            },
                            "category": {
                              "type": "string",
                              "description": "Transaction category name"
                            },
                            "account": {
                              "type": "string",
                              "description": "Account name"
                            },
                            "date": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Transaction date"
                            },
                            "description": {
                              "type": "string",
                              "description": "Transaction description"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "message": {
                  "type": "string",
                  "example": "Summary fetched successfully"
                },
                "success": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Invalid filter type or missing required parameters"
          },
          "404": {
            "description": "No transactions found for the specified period"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/account/transaction/expense": {
      "get": {
        "summary": "Get all recurring transactions",
        "tags": ["Bank"],
        "responses": {
          "200": {
            "description": "Recurring transactions retrieved successfully"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "summary": "Add a recurring transaction",
        "tags": ["Bank"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "accountId": {
                  "type": "string",
                  "required": true,
                  "description": "ID of the account"
                },
                "transactionType": {
                  "type": "string",
                  "required": true,
                  "description": "Type of transaction (income/expense)"
                },
                "amount": {
                  "type": "number",
                  "required": true,
                  "description": "Transaction amount"
                },
                "categoryId": {
                  "type": "string",
                  "required": true,
                  "description": "ID of the category"
                },
                "description": {
                  "type": "string",
                  "required": false,
                  "description": "Transaction description"
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "required": false,
                  "description": "Transaction tags"
                },
                "location": {
                  "type": "object",
                  "required": false,
                  "description": "Transaction location"
                },
                "sharedWith": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "required": false,
                  "description": "Users to share the transaction with"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Recurring transaction added successfully"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/bank/transaction/recurring/{transactionId}": {
      "put": {
        "summary": "Update a recurring transaction",
        "tags": ["Bank"],
        "parameters": [
          {
            "in": "path",
            "name": "transactionId",
            "type": "string",
            "required": true,
            "description": "ID of the recurring transaction to update"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "transactionType": {
                  "type": "string",
                  "required": false,
                  "description": "New transaction type"
                },
                "amount": {
                  "type": "number",
                  "required": false,
                  "description": "New amount"
                },
                "categoryId": {
                  "type": "string",
                  "required": false,
                  "description": "New category ID"
                },
                "description": {
                  "type": "string",
                  "required": false,
                  "description": "New description"
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "required": false,
                  "description": "New tags"
                },
                "location": {
                  "type": "object",
                  "required": false,
                  "description": "New location"
                },
                "sharedWith": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "required": false,
                  "description": "New shared users"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Recurring transaction updated successfully"
          },
          "404": {
            "description": "Recurring transaction not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/account/transaction/expense": {
      "get": {
        "summary": "Get all expenses",
        "tags": ["Bank"],
        "responses": {
          "200": {
            "description": "Expenses retrieved successfully"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/account/transaction/income": {
      "get": {
        "summary": "Get all income transactions",
        "tags": ["Bank"],
        "responses": {
          "200": {
            "description": "Income transactions retrieved successfully"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/account/transaction/investment": {
      "get": {
        "summary": "Get all investment transactions",
        "tags": ["Bank"],
        "responses": {
          "200": {
            "description": "Investment transactions retrieved successfully"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/account/transfer": {
      "post": {
        "summary": "Transfer money between accounts",
        "tags": ["Bank"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "sourceAccountId": {
                  "type": "string",
                  "required": true,
                  "description": "Source account ID"
                },
                "destinationAccountId": {
                  "type": "string",
                  "required": true,
                  "description": "Destination account ID"
                },
                "amount": {
                  "type": "number",
                  "required": true,
                  "description": "Transfer amount"
                },
                "description": {
                  "type": "string",
                  "description": "Transfer description"
                },
                "isBillPayment": {
                  "type": "boolean",
                  "description": "Whether this is a bill payment"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Money transferred successfully"
          },
          "400": {
            "description": "Invalid input or insufficient funds"
          },
          "404": {
            "description": "Account not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/ai/analyze-monthly": {
      "post": {
        "tags": ["AI Analysis"],
        "summary": "Analyze monthly transactions using AI",
        "description": "Analyzes transactions for a given date range and provides AI-powered insights",
        "security": [{"bearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["startDate", "endDate"],
                "properties": {
                  "startDate": {
                    "type": "string",
                    "format": "date",
                    "description": "Start date for analysis (YYYY-MM-DD)"
                  },
                  "endDate": {
                    "type": "string",
                    "format": "date",
                    "description": "End date for analysis (YYYY-MM-DD)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Analysis completed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 200
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "analysis": {
                          "type": "string",
                          "description": "AI-generated analysis of transactions"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Monthly transaction analysis completed successfully"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No transactions found for the specified period"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/v1/ai/smart-suggestions": {
      "post": {
        "tags": ["AI Analysis"],
        "summary": "Get AI-driven smart suggestions",
        "description": "Analyzes transactions and provides personalized financial suggestions",
        "security": [{"bearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["startDate", "endDate"],
                "properties": {
                  "startDate": {
                    "type": "string",
                    "format": "date",
                    "description": "Start date for analysis (YYYY-MM-DD)"
                  },
                  "endDate": {
                    "type": "string",
                    "format": "date",
                    "description": "End date for analysis (YYYY-MM-DD)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Suggestions generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 200
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "suggestions": {
                          "type": "string",
                          "description": "AI-generated financial suggestions"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Smart suggestions generated successfully"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No transactions found for the specified period"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    }
  }
}